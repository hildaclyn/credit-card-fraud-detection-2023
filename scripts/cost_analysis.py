# -*- coding: utf-8 -*-
"""cost_analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rxl4TWNmFvU_pKBiVenINxx0rDU9_J6E
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, precision_recall_curve

def compute_costs(y_test, y_proba, cost_fp=10, cost_fn=1000):
    precision, recall, thresholds = precision_recall_curve(y_test, y_proba)
    costs = []

    for t in thresholds:
        y_pred_thresh = (y_proba >= t).astype(int)
        tn, fp, fn, tp = confusion_matrix(y_test, y_pred_thresh).ravel()
        total_cost = fp * cost_fp + fn * cost_fn
        costs.append(total_cost)

    best_idx = np.argmin(costs)
    return thresholds, costs, thresholds[best_idx], costs[best_idx]

def plot_cost_curve(thresholds, costs, best_threshold):
    plt.figure(figsize=(8, 5))
    plt.plot(thresholds, costs, label="Business Cost")
    plt.axvline(best_threshold, color='red', linestyle='--', label='Best Threshold')
    plt.title("Business Cost vs. Threshold")
    plt.xlabel("Threshold")
    plt.ylabel("Total Cost")
    plt.legend()
    plt.grid(True)
    plt.show()